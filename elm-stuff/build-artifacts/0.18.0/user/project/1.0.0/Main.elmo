var _user$project$Main$getDoorOnStatus = function (state) {
	var _p0 = state;
	switch (_p0.ctor) {
		case 'Busy':
			return '/priv/doors/busy_1.svg';
		case 'Dirty':
			return '/priv/doors/dirty_1.svg';
		case 'InProgress':
			return '/priv/doors/inProgress_1.svg';
		default:
			return '/priv/doors/clean_1.svg';
	}
};
var _user$project$Main$renderFloorPanel = A2(
	_elm_lang$html$Html$div,
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$class('floorPanel'),
		_1: {ctor: '[]'}
	},
	{
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('floor'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text('Floor 3'),
				_1: {ctor: '[]'}
			}),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('worker'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Manadarine Cusosdenuci'),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		}
	});
var _user$project$Main$Room = F3(
	function (a, b, c) {
		return {id: a, state: b, active: c};
	});
var _user$project$Main$Model = F2(
	function (a, b) {
		return {rooms: a, activeRoomId: b};
	});
var _user$project$Main$Confirm = function (a) {
	return {ctor: 'Confirm', _0: a};
};
var _user$project$Main$confirmPanelHtml = F2(
	function (room, message) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('confirmPanel'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$h1,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							A2(
								_elm_lang$core$Basics_ops['++'],
								message,
								A2(
									_elm_lang$core$Basics_ops['++'],
									' ',
									A2(
										_elm_lang$core$Basics_ops['++'],
										_elm_lang$core$Basics$toString(room.id),
										'?')))),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('yes'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(
									_user$project$Main$Confirm(room.id)),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$p,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Da'),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$button,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('no'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(
										_user$project$Main$Confirm(0)),
									_1: {ctor: '[]'}
								}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$p,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Nu'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}
			});
	});
var _user$project$Main$confirmPanel = function (room) {
	var _p1 = room.state;
	switch (_p1.ctor) {
		case 'Dirty':
			return A2(_user$project$Main$confirmPanelHtml, room, 'Incepe curatarea camerei');
		case 'InProgress':
			return A2(_user$project$Main$confirmPanelHtml, room, 'A fost efectuata curatarea camerei');
		default:
			return A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{ctor: '[]'});
	}
};
var _user$project$Main$confirmRoom = function (model) {
	var _p2 = model.activeRoomId;
	if (_p2 === 0) {
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{ctor: '[]'});
	} else {
		var my_room = _elm_lang$core$List$head(
			A2(
				_elm_lang$core$List$filter,
				function (room) {
					return _elm_lang$core$Native_Utils.eq(room.id, model.activeRoomId);
				},
				model.rooms));
		var _p3 = my_room;
		if (_p3.ctor === 'Nothing') {
			return A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{ctor: '[]'});
		} else {
			return _user$project$Main$confirmPanel(_p3._0);
		}
	}
};
var _user$project$Main$Activate = function (a) {
	return {ctor: 'Activate', _0: a};
};
var _user$project$Main$renderDoors = F2(
	function (roomId, state) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('room'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('text'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							_elm_lang$core$Basics$toString(roomId)),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('doorImage'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(
									_user$project$Main$Activate(roomId)),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$img,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$src(
										_user$project$Main$getDoorOnStatus(state)),
									_1: {ctor: '[]'}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('body'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _user$project$Main$renderFloorPanel,
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('roomContainer'),
						_1: {ctor: '[]'}
					},
					A2(
						_elm_lang$core$List$map,
						function (room) {
							return A2(_user$project$Main$renderDoors, room.id, room.state);
						},
						model.rooms)),
				_1: {
					ctor: '::',
					_0: _user$project$Main$confirmRoom(model),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(
									_elm_lang$core$Basics$toString(model.activeRoomId)),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$Main$Clean = {ctor: 'Clean'};
var _user$project$Main$InProgress = {ctor: 'InProgress'};
var _user$project$Main$calculateState = function (state) {
	var _p4 = state;
	switch (_p4.ctor) {
		case 'Dirty':
			return _user$project$Main$InProgress;
		case 'InProgress':
			return _user$project$Main$Clean;
		default:
			return state;
	}
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p5 = msg;
		if (_p5.ctor === 'Activate') {
			return _elm_lang$core$Native_Utils.update(
				model,
				{activeRoomId: _p5._0});
		} else {
			if (_p5._0 === 0) {
				return _elm_lang$core$Native_Utils.update(
					model,
					{activeRoomId: 0});
			} else {
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						rooms: A2(
							_elm_lang$core$List$map,
							function (room) {
								return _elm_lang$core$Native_Utils.update(
									room,
									{
										state: _elm_lang$core$Native_Utils.eq(room.id, model.activeRoomId) ? _user$project$Main$calculateState(room.state) : room.state
									});
							},
							model.rooms),
						activeRoomId: 0
					});
			}
		}
	});
var _user$project$Main$Dirty = {ctor: 'Dirty'};
var _user$project$Main$Busy = {ctor: 'Busy'};
var _user$project$Main$model = {
	activeRoomId: 0,
	rooms: {
		ctor: '::',
		_0: {id: 101, state: _user$project$Main$Dirty, active: false},
		_1: {
			ctor: '::',
			_0: {id: 102, state: _user$project$Main$Busy, active: false},
			_1: {
				ctor: '::',
				_0: {id: 103, state: _user$project$Main$Clean, active: false},
				_1: {
					ctor: '::',
					_0: {id: 104, state: _user$project$Main$InProgress, active: false},
					_1: {
						ctor: '::',
						_0: {id: 105, state: _user$project$Main$InProgress, active: false},
						_1: {
							ctor: '::',
							_0: {id: 106, state: _user$project$Main$Busy, active: false},
							_1: {
								ctor: '::',
								_0: {id: 107, state: _user$project$Main$Busy, active: false},
								_1: {
									ctor: '::',
									_0: {id: 108, state: _user$project$Main$Busy, active: false},
									_1: {
										ctor: '::',
										_0: {id: 109, state: _user$project$Main$Busy, active: false},
										_1: {
											ctor: '::',
											_0: {id: 110, state: _user$project$Main$Dirty, active: false},
											_1: {
												ctor: '::',
												_0: {id: 111, state: _user$project$Main$Busy, active: false},
												_1: {
													ctor: '::',
													_0: {id: 112, state: _user$project$Main$Clean, active: false},
													_1: {
														ctor: '::',
														_0: {id: 113, state: _user$project$Main$InProgress, active: false},
														_1: {
															ctor: '::',
															_0: {id: 114, state: _user$project$Main$InProgress, active: false},
															_1: {
																ctor: '::',
																_0: {id: 115, state: _user$project$Main$Busy, active: false},
																_1: {
																	ctor: '::',
																	_0: {id: 116, state: _user$project$Main$Busy, active: false},
																	_1: {
																		ctor: '::',
																		_0: {id: 117, state: _user$project$Main$Busy, active: false},
																		_1: {
																			ctor: '::',
																			_0: {id: 118, state: _user$project$Main$Busy, active: false},
																			_1: {ctor: '[]'}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
};
var _user$project$Main$main = _elm_lang$html$Html$beginnerProgram(
	{model: _user$project$Main$model, view: _user$project$Main$view, update: _user$project$Main$update})();
