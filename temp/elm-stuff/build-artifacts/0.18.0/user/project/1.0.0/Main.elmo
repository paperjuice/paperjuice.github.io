var _user$project$Main$Model = function (a) {
	return {route: a};
};
var _user$project$Main$PlayerRoute = function (a) {
	return {ctor: 'PlayerRoute', _0: a};
};
var _user$project$Main$PlayersRoute = {ctor: 'PlayersRoute'};
var _user$project$Main$matchers = _evancz$url_parser$UrlParser$oneOf(
	{
		ctor: '::',
		_0: A2(_evancz$url_parser$UrlParser$map, _user$project$Main$PlayersRoute, _evancz$url_parser$UrlParser$top),
		_1: {
			ctor: '::',
			_0: A2(
				_evancz$url_parser$UrlParser$map,
				_user$project$Main$PlayerRoute,
				A2(
					_evancz$url_parser$UrlParser_ops['</>'],
					_evancz$url_parser$UrlParser$s('players'),
					_evancz$url_parser$UrlParser$string)),
			_1: {
				ctor: '::',
				_0: A2(
					_evancz$url_parser$UrlParser$map,
					_user$project$Main$PlayersRoute,
					_evancz$url_parser$UrlParser$s('players')),
				_1: {ctor: '[]'}
			}
		}
	});
var _user$project$Main$NotFoundRoute = {ctor: 'NotFoundRoute'};
var _user$project$Main$parseLocation = function (location) {
	var _p0 = A2(_evancz$url_parser$UrlParser$parseHash, _user$project$Main$matchers, location);
	if (_p0.ctor === 'Just') {
		return _p0._0;
	} else {
		return _user$project$Main$NotFoundRoute;
	}
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p1 = msg;
		if (_p1.ctor === 'Route') {
			var newRoute = _user$project$Main$parseLocation(_p1._0);
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					model,
					{route: newRoute}),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		} else {
			var _p2 = _elm_lang$navigation$Navigation$modifyUrl('nananannan');
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					model,
					{
						route: _user$project$Main$PlayerRoute('nanan')
					}),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		}
	});
var _user$project$Main$Change = {ctor: 'Change'};
var _user$project$Main$view = function (model) {
	var _p3 = model.route;
	switch (_p3.ctor) {
		case 'PlayersRoute':
			return A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$Change),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('hello'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				});
		case 'PlayerRoute':
			return A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						A2(_elm_lang$core$Basics_ops['++'], 'Page 1 ', _p3._0)),
					_1: {ctor: '[]'}
				});
		default:
			return A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Not found :( '),
					_1: {ctor: '[]'}
				});
	}
};
var _user$project$Main$Route = function (a) {
	return {ctor: 'Route', _0: a};
};
var _user$project$Main$init = function (location) {
	return A2(
		_user$project$Main$update,
		_user$project$Main$Route(location),
		_user$project$Main$Model(_user$project$Main$PlayersRoute));
};
var _user$project$Main$main = A2(
	_elm_lang$navigation$Navigation$program,
	_user$project$Main$Route,
	{
		view: _user$project$Main$view,
		update: _user$project$Main$update,
		subscriptions: function (_p4) {
			return _elm_lang$core$Platform_Sub$none;
		},
		init: _user$project$Main$init
	})();
